name: Documentation Build and Production Deploy CI

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["ESP32 Arduino Release"]
    types:
      - completed
  push:
    branches:
      - release/v2.x
      - master
      - docs-embed
    paths:
      - "docs/**"
      - ".github/workflows/docs_deploy.yml"

permissions:
  contents: read

jobs:
  deploy-prod-docs:
    name: Deploy Documentation on Production
    # if: github.repository == 'espressif/arduino-esp32'
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Check if release workflow is successful
        if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'success' }}
        run: |
          echo "Release workflow failed. Exiting..."
          exit 1

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.0.4
        with:
          cache-dependency-path: docs/requirements.txt
          cache: "pip"
          python-version: "3.10"

          # Install Arduino CLI and set environment variables
      - name: Install Arduino CLI
        run: |
          source .github/scripts/install-arduino-cli.sh
          echo "ARDUINO_IDE_PATH=$ARDUINO_IDE_PATH" >> $GITHUB_ENV
          echo "ARDUINO_USR_PATH=$ARDUINO_USR_PATH" >> $GITHUB_ENV

      # Install ESP32 Arduino Core
      - name: Install ESP32 Arduino Core
        run: |
          source .github/scripts/install-arduino-core-esp32.sh

      # Install Python dependencies needed for docs_build_examples.py
      - name: Install Python Dependencies
        run: |
          sudo apt update
          sudo apt install python3-pip python3-setuptools
          cd ./docs
          PATH=/home/runner/.local/bin:$PATH pip3 install -r requirements.txt --prefer-binary

      # Set documentation embedding environment variables
      - name: Set Documentation Environment Variables
        run: |
          # configure env vars for docs_build_examples.py and docs deployment
          echo "DOCS_EMBED_GITHUB_BASE_URL=https://github.com/${{ github.repository }}" >> $GITHUB_ENV
          echo "DOCS_EMBED_GITHUB_BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "DOCS_EMBED_PUBLIC_ROOT=https://${{ secrets.DOCS_SERVER }}/${{ secrets.DOCS_PATH }}/en/${{ github.ref_name == 'master' && 'latest' || github.ref_name }}/" >> $GITHUB_ENV
          echo "DOCS_EMBED_BINARIES_DIR=${{ vars.DOCS_EMBED_BINARIES_DIR }}" >> $GITHUB_ENV
          echo "DOCS_EMBED_LAUNCHPAD_URL=${{ vars.DOCS_EMBED_LAUNCHPAD_URL }}" >> $GITHUB_ENV
          echo "DOCS_EMBED_WOKWI_VIEWER_URL=${{ vars.DOCS_EMBED_WOKWI_VIEWER_URL }}" >> $GITHUB_ENV
          echo "DOCS_EMBED_ABOUT_WOKWI_URL=${{ vars.DOCS_EMBED_ABOUT_WOKWI_URL }}" >> $GITHUB_ENV

      # Build examples using environment variables from install script
      - name: Build Examples
        run: |
          PATH=/home/runner/.local/bin:$PATH python3 .github/scripts/docs_build_examples.py --build --diagram --launchpad

      - name: Cleanup Binaries
        run: |
          PATH=/home/runner/.local/bin:$PATH python3 .github/scripts/docs_build_examples.py -c

      - name: Deploy Documentation
        env:
          # Deploy to production server
          # DOCS_BUILD_DIR: "./docs/_build/"
          DOCS_DEPLOY_PRIVATEKEY: ${{ secrets.DOCS_KEY }}
          DOCS_DEPLOY_PATH: ${{ secrets.DOCS_PATH }}
          DOCS_DEPLOY_SERVER: ${{ secrets.DOCS_SERVER }}
          DOCS_DEPLOY_SERVER_USER: ${{ secrets.DOCS_USER }}
          DOCS_DEPLOY_URL_BASE: ${{ secrets.DOCS_URL }}
        run: |
          sudo apt update
          sudo apt install python3-pip python3-setuptools
          source ./docs/utils.sh
          add_doc_server_ssh_keys $DOCS_DEPLOY_PRIVATEKEY $DOCS_DEPLOY_SERVER $DOCS_DEPLOY_SERVER_USER
          export GIT_VER=$(git describe --always)
          echo "PIP install requirements..."
          pip3 install --user -r ./docs/requirements.txt
          echo "Building the Docs..."
          cd ./docs && build-docs -l en
          echo "Deploy the Docs..."
          export DOCS_BUILD_DIR=$GITHUB_WORKSPACE/docs/
          cd $GITHUB_WORKSPACE/docs
          deploy-docs
