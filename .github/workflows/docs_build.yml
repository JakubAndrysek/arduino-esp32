name: Documentation Build and Deploy CI

on:
  push:
    branches:
      - master
      - release/v2.x
      - wokwi-embed-launchpad
    paths:
      - "docs/**"
      - ".github/workflows/docs_build.yml"
  pull_request:
    paths:
      - "docs/**"
      - ".github/workflows/docs_build.yml"

permissions:
  contents: read

jobs:
  build-docs:
    name: Build ESP-Docs
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.0.4
        with:
          cache-dependency-path: docs/requirements.txt
          cache: "pip"
          python-version: "3.10"

      - name: Restore compiled binaries from cache
        id: cache-restore
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          key: compiled-binaries-consolidated-${{ github.sha }}
          restore-keys: |
            compiled-binaries-consolidated-
            compiled-binaries-Linux-${{ github.sha }}-
            compiled-binaries-Linux-
          path: compiled_binaries
          lookup-only: false

      - name: Download compiled binaries artifact (fallback)
        if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: compiled-binaries-consolidated
          path: compiled_binaries
        continue-on-error: true

      - name: Copy cached binaries to local directory
        run: |
          if [ -d "compiled_binaries" ]; then
            echo "Found cached binaries, copying to local workspace..."
            mkdir -p local_binaries
            cp -r compiled_binaries/* local_binaries/ || true
            echo "Available binaries:"
            find local_binaries -type f -name "*.bin" -o -name "*.elf" | head -20
            echo "Total binary files found: $(find local_binaries -type f \( -name "*.bin" -o -name "*.elf" \) | wc -l)"

            echo "Contents of compiled_binaries directory:"
            find compiled_binaries -type f | head -20
          else
            echo "No cached binaries found, will build fresh"
          fi

      - name: Build Examples
        run: |
          source .github/scripts/install-arduino-cli.sh
          source .github/scripts/install-arduino-core-esp32.sh
          python3 .github/scripts/docs_build_examples.py -ai $ARDUINO_IDE_PATH -au $ARDUINO_USR_PATH -d

      - name: Cleanup Binaries
        run: |
          python3 .github/scripts/docs_build_examples.py -c

      - name: Build
        run: |
          sudo apt update
          sudo apt install python3-pip python3-setuptools
          # GitHub CI installs pip3 and setuptools outside the path.
          # Update the path to include them and run.
          cd ./docs
          PATH=/home/runner/.local/bin:$PATH pip3 install -r requirements.txt --prefer-binary
          PATH=/home/runner/.local/bin:$PATH SPHINXOPTS="-W" build-docs -l en

      - name: Archive Docs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: docs
          path: docs